void cmpIgual(){
        t1=p+1;
        t2=stack[t1];
        t4=p+2;
        t3=stack[t4];
        stack[p]=0;
    L2:
        t5=heap[t2];
        t6=heap[t3];
        if(t5==557886) goto L8;
        goto L4;
    L8:
        if (t6==557886) goto L3;
        goto L4;
    L3:
        stack[p]=1;
        goto L7;
    L4:
        if (t5==557886) goto L5;
        if (t6==557886) goto L5;
        if (t5!=t6) goto L5;
        goto L6;
    L5:
        goto L7;
    L6:
        t2=t2+1;
        t3=t3+1;
        goto L2;
    L7:
}
void potencia(){
        t7=p+3;
        t8=p+1;
        t9=stack[t8];
        stack[t7]=t9;
        t10=p+4;
        t11=p+6;
        t12=t11+1;
        t13=p+2;
        t14=stack[t13];
        stack[t12]=t14;
        p=p+6;
        call getent();
        t15=p+0;
        t16=stack[t15];
        p=p-6;
        stack[t10]=t16;
        t17=p+5;
        t18=p+2;
        t19=stack[t18];
        t20=p+4;
        t21=stack[t20];
        t22=t19-t21;
        stack[t17]=t22;
        t23=p+4;
        t24=stack[t23];
        if (t24==0) goto L11;
        goto L12;
    L11:
        t25=p+3;
        stack[t25]=1;
        goto L10;
    L12:
        t26=p+6;
        stack[t26]=0;
    L13:
        t27=p+6;
        t28=stack[t27];
        t29=p+4;
        t30=stack[t29];
        t31=t30-1;
        if (t28<t31) goto L14;
        goto L15;
    L14:
        t32=p+3;
        t33=p+3;
        t34=stack[t33];
        t35=p+1;
        t36=stack[t35];
        t37=t34*t36;
        stack[t32]=t37;
        t38=p+6;
        t39=p+6;
        t40=stack[t39];
        t41=t40+1;
        stack[t38]=t41;
        goto L13;
    L15:
    L10:
        t42=p+6;
        stack[t42]=1;
        t43=p+7;
        stack[t43]=1;
        t44=p+5;
        t45=stack[t44];
        if (t45!=0) goto L17;
        goto L18;
    L17:
    L19:
        t46=p+5;
        t47=stack[t46];
        t48=t47%1;
        if (t48!=0) goto L20;
        goto L21;
    L20:
        t49=p+5;
        t50=p+5;
        t51=stack[t50];
        t52=t51*10;
        stack[t49]=t52;
        t53=p+6;
        t54=p+6;
        t55=stack[t54];
        t56=10*t55;
        stack[t53]=t56;
        goto L19;
    L21:
        t57=p+7;
        t58=p+9;
        t59=t58+1;
        t60=p+1;
        t61=stack[t60];
        stack[t59]=t61;
        t62=t58+2;
        t63=p+6;
        t64=stack[t63];
        t65=p+5;
        t66=stack[t65];
        t67=t64/t66;
        stack[t62]=t67;
        p=p+9;
        call raizsqrt();
        t68=p+0;
        t69=stack[t68];
        p=p-9;
        stack[t57]=t69;
        goto L16;
    L18:
    L16:
        t70=p+3;
        t71=p+3;
        t72=stack[t71];
        t73=p+7;
        t74=stack[t73];
        t75=t72*t74;
        stack[t70]=t75;
        t76=p+0;
        t77=p+3;
        t78=stack[t77];
        stack[t76]=t78;
}
void raizsqrt(){
        t79=p+3;
        stack[t79]=0;
        t80=p+4;
        stack[t80]=0.00001;
        t81=p+2;
        t82=stack[t81];
        if (t82==0) goto L23;
        goto L24;
    L23:
        t83=p+3;
        stack[t83]=1;
        goto L22;
    L24:
    L25:
        t84=p+6;
        t85=t84+1;
        t86=p+3;
        t87=stack[t86];
        stack[t85]=t87;
        t88=t84+2;
        t89=p+2;
        t90=stack[t89];
        stack[t88]=t90;
        p=p+6;
        call potene();
        t91=p+0;
        t92=stack[t91];
        p=p-6;
        t93=p+1;
        t94=stack[t93];
        if(t92<t94) goto L26;
        goto L27;
    L26:
        t95=p+3;
        t96=p+3;
        t97=stack[t96];
        t98=p+4;
        t99=stack[t98];
        t100=t97+t99;
        stack[t95]=t100;
        goto L25;
    L27:
    L22:
        t101=p+0;
        t102=p+3;
        t103=stack[t102];
        stack[t101]=t103;
}
void potene(){
        t104=p+3;
        stack[t104]=1;
        t105=p+4;
        stack[t105]=0;
    L28:
        t106=p+4;
        t107=stack[t106];
        t108=p+2;
        t109=stack[t108];
        if (t107<t109) goto L29;
        goto L30;
    L29:
        t110=p+3;
        t111=p+3;
        t112=stack[t111];
        t113=p+1;
        t114=stack[t113];
        t115=t112*t114;
        stack[t110]=t115;
        t116=p+4;
        t117=p+4;
        t118=stack[t117];
        t119=t118+1;
        stack[t116]=t119;
        goto L28;
    L30:
        t120=p+0;
        t121=p+3;
        t122=stack[t121];
        stack[t120]=t122;
}
void print_olcp2jjps(){
        t123=p+1;
        t124=stack[t123];
    L31:
        t125=heap[t124];
        if(t125==557886) goto L32;
        print("%c",t125);
        t124=t124+1;
        goto L31;
    L32:
}
void copia_olcp2jjps(){
        t126=p+1;
        t127=stack[t126];
    L33:
        t128=heap[t127];
        if(t128==557886) goto L34;
        heap[h]=t128;
        h=h+1;
        t127=t127+1;
        goto L33;
    L34:
}
void concat_olcp2jjps(){
        stack[p]=h;
        t129=p+3;
        t130=t129+1;
        t131=p+1;
        t132=stack[t131];
        stack[t130]=t132;
        p=p+3;
        call copia_olcp2jjps();
        p=p-3;
        t133=p+2;
        t134=stack[t133];
        stack[t130]=t134;
        p=p+3;
        call copia_olcp2jjps();
        p=p-3;
        heap[h]=557886;
        h=h+1;
}
void reverse(){
        t135=p+1;
        t136=stack[t135];
        t137=0;
        t138=0;
        t139=p+2;
        t140=stack[t139];
        t141=t140-1;
    L35:
        if(t138<t141) goto L36;
        goto L37;
    L36:
        t142=t136+t138;
        t137=heap[t142];
        t143=t136+t141;
        t144=heap[t143];
        heap[t142]=t144;
        heap[t143]=t137;
        t138=t138+1;
        t141=t141-1;
        goto L35;
    L37:
}
void ftoa(){
        t145=p+3;
        stack[t145]=h;
        t146=p+1;
        t147=stack[t146];
        if(t147<0) goto L39;
        goto L40;
    L39:
        heap[h]=45;
        h=h+1;
        t148=p+1;
        t149=p+1;
        t150=stack[t149];
        t151=-1;
        t152=t150*t151;
        stack[t148]=t152;
        goto L38;
    L40:
    L38:
        t153=p+4;
        t154=p+4;
        t155=t154+1;
        t156=p+1;
        t157=stack[t156];
        stack[t155]=t157;
        p=p+4;
        call getent();
        t158=p+0;
        t159=stack[t158];
        p=p-4;
        $$_clean_scope(t154, 4);
        stack[t153]=t159;
        t160=p+5;
        t161=p+1;
        t162=stack[t161];
        t163=p+4;
        t164=stack[t163];
        t165=t162-t164;
        stack[t160]=t165;
        t166=p+4;
        t167=stack[t166];
        if(t167==0) goto L42;
        goto L43;
    L42:
        heap[h]=48;
        h=h+1;
        goto L41;
    L43:
    L41:
        t168=p+6;
        t169=p+6;
        t170=t169+1;
        t171=p+4;
        t172=stack[t171];
        stack[t170]=t172;
        t173=t169+2;
        stack[t173]=0;
        p=p+6;
        call inttostr();
        t174=p+0;
        t175=stack[t174];
        p=p-6;
        $$_clean_scope(t169, 6);
        stack[t168]=t175;
        t176=p+2;
        t177=stack[t176];
        if (t177!=0) goto L45;
        goto L46;
    L45:
        heap[h]=46;
        h=h+1;
        t178=p+7;
        stack[t178]=0;
        t179=p+8;
        stack[t179]=1;
    L47:
        t180=p+7;
        t181=stack[t180];
        t182=p+2;
        t183=stack[t182];
        if(t181<t183) goto L48;
        goto L49;
    L48:
        t184=p+8;
        t185=p+8;
        t186=stack[t185];
        t187=t186*10;
        stack[t184]=t187;
        t188=p+7;
        t189=p+7;
        t190=stack[t189];
        t191=t190+1;
        stack[t188]=t191;
        goto L47;
    L49:
        t192=p+5;
        t193=p+5;
        t194=stack[t193];
        t195=p+8;
        t196=stack[t195];
        t197=t194*t196;
        stack[t192]=t197;
        t198=p+10;
        t199=t198+1;
        t200=p+10;
        t201=t200+1;
        t202=p+5;
        t203=stack[t202];
        stack[t201]=t203;
        p=p+10;
        call getent();
        t204=p+0;
        t205=stack[t204];
        p=p-10;
        $$_clean_scope(t200,10);
        stack[t199]=t205;
        t206=t198+2;
        t207=p+2;
        t208=stack[t207];
        stack[t206]=t208;
        p=p+10;
        call inttostr();
        t209=p+0;
        t210=stack[t209];
        p=p-10;
        goto L44;
    L46:
    L44:
        heap[h]=557886;
        h=h+1;
        t211=p+0;
        t212=p+3;
        t213=stack[t212];
        stack[t211]=t213;
}
void inttostr(){
        t214=p+3;
        stack[t214]=h;
        t215=p+4;
        stack[t215]=0;
    L50:
        t216=p+1;
        t217=stack[t216];
        if (t217!=0) goto L51;
        goto L52;
    L51:
        t218=p+4;
        t219=stack[t218];
        t220=t219+1;
        stack[t218]=t220;
        t221=p+1;
        t222=stack[t221];
        t223=t222%10;
        t224=t223+48;
        heap[h]=t224;
        h=h+1;
        t225=p+1;
        t226=stack[t225];
        t227=t226/10;
        stack[t225]=t227;
        t228=p+1;
        t229=p+5;
        t230=t229+1;
        t231=p+1;
        t232=stack[t231];
        stack[t230]=t232;
        p=p+5;
        call getent();
        t233=p+0;
        t234=stack[t233];
        p=p-5;
        $$_clean_scope(t229,5);
        stack[t228]=t234;
        goto L50;
    L52:
    L53:
        t235=p+4;
        t236=stack[t235];
        t237=p+2;
        t238=stack[t237];
        if(t236<t238) goto L54;
        goto L55;
    L54:
        heap[h]=48;
        h=h+1;
        t239=p+4;
        t240=stack[t239];
        t241=t240+1;
        stack[t239]=t241;
        goto L53;
    L55:
        t242=p+5;
        t243=t242+1;
        t244=p+3;
        t245=stack[t244];
        stack[t243]=t245;
        t246=t242+2;
        t247=p+4;
        t248=stack[t247];
        stack[t246]=t248;
        p=p+5;
        call reverse();
        p=p-5;
        $$_clean_scope(t242, 5);
        t249=p+0;
        t250=p+4;
        t251=stack[t250];
        stack[t249]=t251;
}
void getent(){
        t252=p+2;
        stack[t252]=0;
        t253=p+1;
        t254=stack[t253];
        if(t254<0) goto L57 ;
        goto L58;
    L57:
        t255=p+1;
        t256=p+1;
        t257=stack[t256];
        t258=t257-0.00000000001;
        stack[t255]=t258;
        t259=p+3;
        t260=p+1;
        t261=stack[t260];
        t262=0-1;
        t263=t261*t262;
        stack[t259]=t263;
    L59:
        t264=p+3;
        t265=stack[t264];
        if(t265<=1) goto L60;
        goto L61;
    L61:
        t266=p+3;
        t267=p+3;
        t268=stack[t267];
        t269=t268-1;
        stack[t266]=t269;
        t270=p+2;
        t271=p+2;
        t272=stack[t271];
        t273=t272+1;
        stack[t270]=t273;
        goto L59;
    L60:
        goto L56;
    L58:
        t274=p+1;
        t275=stack[t274];
        if (t275>0) goto L62;
        goto L63;
    L62:
        t276=p+1;
        t277=p+1;
        t278=stack[t277];
        t279=t278+0.00000000001;
        stack[t276]=t279;
        t280=p+4;
        t281=p+1;
        t282=stack[t281];
        stack[t280]=t282;
    L64:
        t283=p+4;
        t284=stack[t283];
        if(t284<=1) goto L65;
        goto L66;
    L66:
        t285=p+4;
        t286=p+4;
        t287=stack[t286];
        t288=t287-1;
        stack[t285]=t288;
        t289=p+2;
        t290=p+2;
        t291=stack[t290];
        t292=t291+1;
        stack[t289]=t292;
        goto L64;
    L65:
        goto L56;
    L63:
    L56:
        t293=p+0;
        t294=p+2;
        t295=stack[t294];
        stack[t293]=t295;
}
void booltostr(){
        t296=p+1;
        t297=stack[t296];
        stack[p]=h;
        if(t297==0)goto L67;
        heap[h]=116;
        h=h+1;
        heap[h]=114;
        h=h+1;
        heap[h]=117;
        h=h+1;
        heap[h]=101;
        h=h+1;
        heap[h]=557886;
        h=h+1;
        goto L68;
    L67:
        heap[h]=102;
        h=h+1;
        heap[h]=97;
        h=h+1;
        heap[h]=108;
        h=h+1;
        heap[h]=115;
        h=h+1;
        heap[h]=101;
        h=h+1;
        heap[h]=557886;
        h=h+1;
    L68:
}
void StringToNum(){
        t298=p+1;
        t299=stack[t298];
        t300=0;
        t301=0;
        t302=10;
        t303=1;
        t304=1;
    L69:
        t305=heap[t299];
        if (t305==557886) goto L75;
        if (t305!=45) goto L70;
        t303=-1;
        goto L74;
    L70:
        if(t305!=46) goto L71;
        t304=0;
        goto L74;
    L71:
        if(t305>=58) goto L76;
        if(t305>47) goto L72;
    L76:
        print("%c",99);
        print("%c",97);
        print("%c",115);
        print("%c",116);
        print("%c",32);
        print("%c",101);
        print("%c",114);
        print("%c",114);
        print("%c",111);
        print("%c",114);
        print("%c",32);
        t313=p+2;
        t314=stack[t313];
        t315=p+3;
        t316=stack[t315];
        print("%e",t314);
        print("%c",44);
        print("%e",t316);
        goto L1;
    L72:
        if(t304!=1) goto L73;
        t306=t300*10;
        t307=t306+t305;
        t308=t307-48;
        t300=t308;
        goto L74;
    L73:
        t309=t305-48;
        t310=t309/t302;
        t311=t301+t310;
        t301=t311;
        t302=t302*10;
    L74:
        t299=t299+1;
        goto L69;
    L75:
        t312=t300+t301;
        t300=t312*t303;
        stack[p]=t300;
}
var p=0;
var h=0;
void metojjpsmain_(){
       if (5>8)  goto L79;
       goto L80;
   L79:
   L81: //etiqueta de inicio de ciclo
       if (1==1)  goto L82;
       goto L83;
   L82:
       goto L81;
       goto L83;
       goto L77;
   L84: //etiqueta de inicio de ciclo
   L85: //condicion do while
       t317=-1;
       if (0==1)  goto L87;
       goto L88;
   L87:
       t317=1;
   L88:
       if (1==1)  goto L89;
       goto L90;
   L89:
       t317=t317+2;
   L90:
       t317=t317-1;
       if (t317==0) goto L91;
       goto L92;
   L91:
       goto L84;//goto inicio dowhile
   L92:
   L86://salida del break
       goto L81;//goto inicio switch
   L83:
       goto L78;
   L80:
       if (8==5)  goto L93;
       goto L94;
   L93:
       goto L78;
   L94:
       t318=h;
       heap[h]=104;
       h=h+1;
       heap[h]=111;
       h=h+1;
       heap[h]=108;
       h=h+1;
       heap[h]=97;
       h=h+1;
       heap[h]=557886;
       h=h+1;
       t319=p+2;
       t320=t319+1;
       stack[t320]=t318;
       p=p+2;
       call print_olcp2jjps();
       p=p-2;
       print("%c",10);
   L78:
   L77:
}
       L1:
